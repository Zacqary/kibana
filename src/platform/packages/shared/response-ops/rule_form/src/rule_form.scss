.ruleForm__container {
  container-type: inline-size;
}

.ruleFormFlyout__container {
  container-type: inline-size;
}

.actionConnectorModal__container {
  container-type: inline-size;
}

/* EUI breakpoint mixins only support @media screen, we need to manually configure them for @container */
$euiBreakpointMMax: map-get($euiBreakpoints, 'm') - 1px;
$euiBreakpointSMax: map-get($euiBreakpoints, 's') - 1px;
$euiBreakpointSMin: map-get($euiBreakpoints, 's');

@container (max-width: $euiBreakpointMMax) {
  .euiDescribedFormGroup {
    flex-direction: column;
  }
  .euiDescribedFormGroup > .euiFlexItem {
    width: 100%;
  }
  .ruleDefinitionHeader {
    flex-direction: column;
    gap: $euiSizeM;
  }
  .ruleDefinitionHeaderRuleTypeName {
    font-size: $euiFontSizeM;
    margin-bottom: $euiSizeXS;
  }
  .ruleDefinitionHeaderRuleTypeDescription, .ruleDefinitionHeaderDocsLink {
    font-size: $euiFontSizeS;
  }
}

[class*='showForContainer'] {
  display: none;
}

@container (max-width: $euiBreakpointMMax) and (min-width: $euiBreakpointSMin) {
  .hideForContainer--s {
    display: none;
  }

  .showForContainer--s {
    display: initial !important;
  }
}

@container (max-width: $euiBreakpointSMax) {
  .hideForContainer--xs {
    display: none;
  }

  .showForContainer--xs {
    display: initial !important;
  }
}